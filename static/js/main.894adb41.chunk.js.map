{"version":3,"sources":["components/page-controller/index.js","components/page-controller/page-controller.js","components/genre-list-context/genre-list-context.js","components/movie-block/movie-block.js","components/movie-block/index.js","components/movies/movies.js","components/movies/index.js","components/movie-page-search/index.js","components/movie-page-search/movie-page-search.js","components/movie-page-rated/index.js","components/movie-page-rated/movie-page-rated.js","services/movies-service.js","components/movie-page-selector/index.js","components/movie-page-selector/movie-page-selector.js","components/movie-page/index.js","components/movie-page/movie-page.js","components/error-alert/index.js","components/error-alert/error-alert.js","components/app/index.js","components/app/app.js","index.js"],"names":["PageController","total","onChange","current","error","size","pageSize","showSizeChanger","className","React","createContext","GenreListProvider","Provider","GenreListConsumer","Consumer","formatDate","date","dateObj","Date","formatWithOptions","locale","enUS","dateToString","cutOverview","txt","symbol","i","cutedTxt","slice","isDeletedAllUncompletedWords","length","Vote","vote","value","MoviePoster","img","image","src","alt","Genres","genreList","genreIds","reduce","acc","id","genre","get","push","MovieBlock","data","rateMovie","guestSessionId","title","overview","rating","ratingUser","sessionStorage","getItem","console","log","allowHalf","count","defaultValue","undefined","ratingSelector","character","StarFilled","Movies","movieBlocksData","loading","errorMessage","text","style","marginTop","marginBottom","message","description","type","showIcon","tip","map","el","movieData","getMovies","defaultProps","MoviePageSearch","state","totalPages","query","page","debouncedMoviesServiceGetMovies","debounce","prevState","props","setState","then","catch","onChangePage","onChangeQuery","target","trimLeft","prevProps","this","placeholder","Component","MoviePageRated","getRatedMovies","apiKey","url","urlImageDB","createSearchMoviesURL","searchUrl","encodedQuery","encodeURIComponent","prepareMoviesJson","results","total_pages","poster_path","release_date","vote_average","genre_ids","a","String","fetch","responce","json","createGuestSession","response","guest_session_id","rateUrl","method","headers","body","JSON","stringify","Number","setItem","getGenreList","MoviePageSelector","switchKeys","getHideClassByName","name","some","MoviesService","MoviePage","onClickMenu","evt","key","onClick","selectedKeys","mode","Item","ErrorAlert","App","Promise","all","genres","set","Map","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.894adb41.chunk.js","sourcesContent":["import PageController from './page-controller';\n\nexport default PageController;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './page-controller.css';\nimport { Pagination } from 'antd';\n\n\nexport default function PageController({ total, onChange, current, error }) {\n  if (total === 0 || error === true ) {\n    return null;\n  }\n\n  return (\n    <Pagination\n      size=\"small\"\n      pageSize=\"1\"\n      total={total}\n      showSizeChanger={false}\n      onChange={onChange}\n      current={current}\n      className=\"page-controller\"\n    />\n  );\n}\n\nPageController.propTypes = {\n  error: PropTypes.bool,\n  total: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  current: PropTypes.number.isRequired,\n};","import React from 'react';\n\nconst { Provider: GenreListProvider, Consumer: GenreListConsumer } = React.createContext();\n\nexport { GenreListProvider, GenreListConsumer };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-block.css';\nimport { formatWithOptions } from 'date-fns/fp';\nimport { enUS } from 'date-fns/locale';\nimport { Tag, Rate, Empty } from 'antd';\nimport { StarFilled } from '@ant-design/icons';\nimport { GenreListConsumer } from '../genre-list-context';\n\nfunction formatDate(date) {\n  try {\n    const dateObj = new Date(date);\n    const dateToString = formatWithOptions({ locale: enUS }, 'MMMM d, yyyy');\n\n    return dateToString(dateObj);\n  } catch {\n    return date;\n  }\n}\n\nfunction isLetterOrDigit(symbol) {\n  const isLowerLetter = symbol >= 'a' && symbol <= 'z';\n  const isUpperLetter = symbol >= 'A' && symbol <= 'Z';\n  const isDigitSymbol = symbol >= '0' && symbol <= '9';\n\n  return isLowerLetter || isUpperLetter || isDigitSymbol;\n}\n\nfunction cutOverview(txt) {\n  let i = 225;\n  let cutedTxt = txt.slice(0, i);\n  let isDeletedAllUncompletedWords = false;\n\n  while (!isDeletedAllUncompletedWords) {\n    if (isLetterOrDigit(cutedTxt[i - 1])) {\n      i -= 1;\n    } else {\n      isDeletedAllUncompletedWords = true;\n    }\n  }\n\n  cutedTxt = cutedTxt.slice(0, i);\n\n  return cutedTxt + (txt.length !== cutedTxt.length ? '...' : '');\n}\n\nfunction getBorderColorClass(vote) {\n  if (vote > 7) {\n    return 'vote-higher-7';\n  }\n  if (vote > 5) {\n    return 'vote-higher-5';\n  }\n  if (vote > 3) {\n    return 'vote-higher-3';\n  }\n\n  return 'vote-lower-3';\n}\n\nfunction Vote({ value }) {\n  if (value === '' || value === '0') {\n    return null;\n  }\n\n  return <div className={`vote ${getBorderColorClass(value)}`}>{value}</div>;\n}\n\nVote.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nfunction MoviePoster({ img }) {\n  const image = img === '' ? <Empty /> : <img src={img} alt=\"\" />;\n\n  return (\n    <div className=\"movie-poster\">\n      <div className=\"movie-poster__img-wrapper\">{image}</div>\n    </div>\n  );\n}\n\nMoviePoster.propTypes = {\n  img: PropTypes.string.isRequired,\n};\n\nfunction Genres({ genreList, genreIds }) {\n  const getTags = () => {\n    return genreIds.reduce((acc, id) => {\n      const genre = genreList.get(id);\n\n      if (genre) {\n        acc.push(<Tag key={id}>{genre}</Tag>);\n      }\n\n      return acc;\n    }, []);\n  };\n\n  return <div className=\"tags\">{getTags()}</div>;\n}\n\nGenres.propTypes = {\n  genreList: PropTypes.objectOf(Map).isRequired,\n  genreIds: PropTypes.arrayOf(Number).isRequired,\n};\n\n\n\n\nexport default function MovieBlock ({data, rateMovie, id, guestSessionId} ) {\n\n  function ratingSelector  (rating,ratingUser) {\n    if (ratingUser !== undefined) {\n      console.log(\"ratingSelector#1:\", rating,ratingUser)\n      return  ratingUser } else\n           if (typeof rating === 'number' ){\n             console.log(\"ratingSelector#2:\", rating,ratingUser)\n        return rating\n      } else {\n             console.log(\"ratingSelector№3:\", rating,ratingUser)\n             return 0\n           }\n\n  }\n\n    const {img, title, date, overview, vote, rating, genreIds} = data;\n\n\n\n    const ratingUser = sessionStorage.getItem(id)\n    console.log(title, \"rating\", rating, \"ratingUser\", ratingUser)\n\n    return (\n      <div className=\"movie-block\">\n        <MoviePoster img={img}/>\n        <div className=\"movie-description\">\n          <div className=\"col-1\">\n            <div className=\"description-img-wrapper\">\n              <img src={img} alt=\"\"/>\n            </div>\n            <div className=\"main-info-wrapper\">\n              <div className=\"title\">{title}</div>\n              <div className=\"date\">{formatDate(date)}</div>\n              <GenreListConsumer>\n                {(genreList) => <Genres genreList={genreList} genreIds={genreIds}/>}\n              </GenreListConsumer>\n            </div>\n            <Vote value={vote}/>\n          </div>\n          <div className=\"col-2\">\n            <span className=\"overview\">{cutOverview(overview)}</span>\n          </div>\n          <div className=\"col-3\">\n\n            {/*Разобраться с логикой тут!!!*/}\n            <Rate\n              allowHalf\n              count={10}\n              defaultValue={\n                // typeof rating === 'number' ? rating : 0\n                 ratingSelector(rating, ratingUser)\n              }\n              character={<StarFilled className=\"star-filled\"/>}\n              onChange={value => rateMovie(guestSessionId, id, value)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n}\n\nMovieBlock.propTypes = {\n  rateMovie: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    vote: PropTypes.string.isRequired,\n    genreIds: PropTypes.arrayOf(Number).isRequired,\n    rating: PropTypes.number,\n  }).isRequired,\n};\n","import MovieBlock from './movie-block';\n\nexport default MovieBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movies.css';\nimport { Empty, Spin, Alert } from 'antd';\nimport MovieBlock from '../movie-block';\n\nexport default function Movies({ movieBlocksData, loading, error, errorMessage, rateMovie, guestSessionId }) {\n  const getMovies = () => {\n    if (error) {\n      const text = errorMessage === 'Failed to fetch' ? 'No internet connection' : 'Server error';\n      console.log (\"error\")\n      return (\n        <Alert\n          style={{ marginTop: '50px', marginBottom: '100px' }}\n          message=\"Error:\"\n          description={text}\n          type=\"error\"\n          showIcon\n        />\n      );\n    }\n\n    if (loading) {\n      return <Spin tip=\"loading...\" style={{ marginTop: '60px', marginBottom: '100px' }} />;\n    }\n\n    if (!movieBlocksData.length) {\n      return <Empty style={{ marginTop: '60px', marginBottom: '100px' }} />;\n    }\n\n\n\n    return movieBlocksData.map((el) => {\n      const { id, ...movieData } = el;\n\n      return (\n        <MovieBlock\n          key={id}\n          id={id}\n          data={movieData}\n          rateMovie={rateMovie}\n          guestSessionId={guestSessionId}\n        />\n      );\n    });\n  };\n\n  return <div className=\"movies\">{getMovies()}</div>;\n}\n\nMovies.defaultProps = {\n  movieBlocksData: [],\n  loading: false,\n  error: false,\n  errorMessage: '',\n  rateMovie: () => {},\n};\n\nMovies.propTypes = {\n  movieBlocksData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      vote: PropTypes.string.isRequired,\n      rating: PropTypes.number,\n    })\n  ),\n  loading: PropTypes.bool,\n  error: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  rateMovie: PropTypes.func,\n};\n","import Movies from './movies';\n\nexport default Movies;\n","import MoviePageSearch from './movie-page-search';\n\nexport default MoviePageSearch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-page-search.css';\nimport { debounce } from 'lodash';\nimport PageController from '../page-controller';\nimport Movies from '../movies';\n\nexport default class MoviePageSearch extends React.Component {\n  state = {\n    movieBlocksData: [],\n    totalPages: 0,\n    query: '',\n    page: 1,\n    loading: false,\n    error: false,\n    errorMessage: '',\n    rating: \"\"\n  };\n\n  debouncedMoviesServiceGetMovies = debounce((prevState) => {\n    const { query, page} = this.state;\n    const { getMovies } = this.props;\n\n    if (prevState.query !== query || prevState.page !== page) {\n      this.setState({ loading: true });\n\n      getMovies(query, page)\n        .then(({ movieBlocksData, totalPages }) => {\n          this.setState({\n            movieBlocksData,\n            totalPages,\n            loading: false,\n\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            error: true,\n            errorMessage: error.message,\n          });\n        });\n    }\n  }, 500);\n\n  componentDidUpdate(prevProps, prevState) {\n    this.debouncedMoviesServiceGetMovies(prevState);\n  }\n\n  onChangePage = (page) => {\n    if (page > 0) {\n      this.setState({ page });\n    }\n  };\n\n  onChangeQuery = ({ target }) => {\n    const query = target.value.trimLeft();\n\n    this.setState({ query, page: 1 });\n  };\n\n  render() {\n    const { totalPages, query, page, movieBlocksData, loading, error, errorMessage } = this.state;\n\n    const { onChangeQuery, onChangePage } = this;\n    const {  rateMovie, className, guestSessionId }  = this.props;\n\n\n    return (\n      <div className={`movie-page-search ${className}`}>\n        <input\n          type=\"search\"\n          className=\"movie-search\"\n          placeholder=\"Type to search...\"\n          onChange={onChangeQuery}\n          value={query}\n        />\n        <Movies\n          movieBlocksData={movieBlocksData}\n          loading={loading}\n          error={error}\n          errorMessage={errorMessage}\n          rateMovie={rateMovie}\n          guestSessionId={guestSessionId}\n        />\n        <PageController total={totalPages} onChange={onChangePage} current={page} error={error} />\n      </div>\n    );\n  }\n}\n\nMoviePageSearch.propTypes = {\n  getMovies: PropTypes.func.isRequired,\n  rateMovie: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired,\n};\n","import MoviePageRated from './movie-page-rated';\n\nexport default MoviePageRated;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-page-rated.css';\nimport Movies from '../movies';\nimport PageController from \"../page-controller\";\n\nexport default class MoviePageRated extends React.Component {\n  state = {\n    movieBlocksData: [],\n    totalPages: 0,\n    query: '',\n    page: 1,\n    loading: false,\n    error: false,\n    errorMessage: '',\n  };\n\n\n  componentDidUpdate(prevProps,prevState) {\n    const { getRatedMovies, className, guestSessionId} = this.props;\n    const {page} = this.state\n\n    if (prevProps.className !== className ||  prevState.page !== page) {\n         getRatedMovies( guestSessionId, page )\n        .then(({ movieBlocksData, totalPages }) =>\n          this.setState({\n            loading: false,\n            error: false,\n            movieBlocksData,\n            totalPages\n          })\n        )\n        .catch((error) =>\n          this.setState({\n            error: true,\n            errorMessage: error.message,\n          })\n        );\n\n\n\n    }\n  }\n\n  onChangePage = (page) => {\n    if (page > 0) {\n      this.setState({ page });\n    }\n  };\n\n  render() {\n    const { className, rateMovie, guestSessionId } = this.props;\n    const { movieBlocksData, loading, error, errorMessage, totalPages, page } = this.state;\n    const { onChangePage } = this;\n\n    return (\n      <div className={`movie-page-rated ${className}`}>\n        <Movies\n          movieBlocksData={movieBlocksData}\n          loading={loading}\n          error={error}\n          errorMessage={errorMessage}\n          rateMovie={rateMovie}\n          guestSessionId={guestSessionId}\n        />\n        <PageController total={totalPages} onChange={onChangePage} current={page} error={error} />\n      </div>\n    );\n  }\n}\n\nMoviePageRated.propTypes = {\n  className: PropTypes.string.isRequired,\n  getRatedMovies: PropTypes.func.isRequired,\n  rateMovie: PropTypes.func.isRequired,\n};\n","class MoviesService {\n  apiKey = '3948d9a57f99991d20df72892016a965';\n\n  url = 'https://api.themoviedb.org/3';\n\n  urlImageDB = 'https://image.tmdb.org/t/p/w500';\n\n  createSearchMoviesURL = (query, page) => {\n    const searchUrl = `${this.url}/search/movie?api_key=${this.apiKey}`;\n    const encodedQuery = encodeURIComponent(query);\n    const url = `${searchUrl}&query=${encodedQuery}&page=${page}`;\n\n    return url;\n  };\n\n  prepareMoviesJson = ({ results, total_pages: totalPages }) => {\n    const movieBlocksData = results.map((el) => {\n      const img = el.poster_path == null ? '' : this.urlImageDB + el.poster_path;\n\n      return {\n        id: el.id,\n        title: el.title,\n        overview: el.overview,\n        date: el.release_date,\n        img,\n        vote: `${el.vote_average}`,\n        rating: el.rating,\n        genreIds: el.genre_ids,\n      };\n\n\n    });\n\n    return { movieBlocksData, totalPages };\n  };\n\n  getMovies = async (query, page = 1) => {\n    if ((typeof query === 'string' || query instanceof String) && query.length > 0) {\n      return fetch(this.createSearchMoviesURL(query, page))\n        .then((responce) => responce.json())\n        .then((json) => this.prepareMoviesJson(json));\n    }\n    return { movieBlocksData: [], totalPages: 0 };\n  };\n\n  createGuestSession = async () => {\n    return fetch(`${this.url}/authentication/guest_session/new?api_key=${this.apiKey}`)\n      .then((response) => response.json())\n      .then(({ guest_session_id: id }) => id);\n  };\n\n  rateMovie = async (guestSessionId, id, vote) => {\n    const rateUrl = `${this.url}/movie/${id}/rating?api_key=${this.apiKey}`;\n    fetch(`${rateUrl}&guest_session_id=${guestSessionId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({\n        value: Number(vote),\n      }),\n    })\n     sessionStorage.setItem(id,vote);\n  };\n\n  getRatedMovies = async (guestSessionId, page = 1) => {\n    return fetch(`${this.url}/guest_session/${guestSessionId}/rated/movies?api_key=${this.apiKey}&page=${page}`)\n      .then((response) => response.json())\n      .then((json) => this.prepareMoviesJson(json));\n  };\n\n  getGenreList = async () => {\n    return fetch(`${this.url}/genre/movie/list?api_key=${this.apiKey}`).then((response) =>\n      response.json()\n    );\n  };\n}\n\nexport default new MoviesService()","import MoviePageSelector from './movie-page-selector';\n\nexport default MoviePageSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-page-selector.css';\nimport MoviePageSearch from '../movie-page-search';\nimport MoviePageRated from '../movie-page-rated';\nimport MoviesService from \"../../services/movies-service\";\n\nexport default function MoviePageSelector({ switchKeys, guestSessionId }) {\n\n  const getHideClassByName = (name) => {\n    const isVisible = switchKeys.some((el) => el === name);\n\n    return isVisible ? '' : 'hidden';\n  };\n\n  return (\n    <>\n      <MoviePageSearch\n        className={getHideClassByName('search')}\n        getMovies={MoviesService.getMovies}\n        rateMovie={MoviesService.rateMovie}\n        guestSessionId={guestSessionId}\n      />\n      <MoviePageRated\n        className={getHideClassByName('rated')}\n        rateMovie={(id, vote) => MoviesService.rateMovie(guestSessionId, id, vote)}\n        getRatedMovies={MoviesService.getRatedMovies}\n        guestSessionId={guestSessionId}\n      />\n    </>\n  );\n}\n\nMoviePageSelector.propTypes = {\n  switchKeys: PropTypes.arrayOf(String).isRequired,\n  guestSessionId: PropTypes.string.isRequired,\n};\n","import MoviePage from './movie-page';\n\nexport default MoviePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-page.css';\nimport { Menu } from 'antd';\nimport MoviePageSelector from '../movie-page-selector';\n\nexport default class MoviePage extends React.Component {\n  state = {\n    switchKeys: ['search'],\n  };\n\n  onClickMenu = (evt) => {\n    this.setState({ switchKeys: [evt.key] });\n  };\n\n  render() {\n    const { guestSessionId } = this.props;\n    const { switchKeys } = this.state;\n    const { onClickMenu } = this;\n\n    return (\n      <div className=\"movie-page\">\n        <div className=\"switch\">\n          <Menu onClick={onClickMenu} selectedKeys={switchKeys} mode=\"horizontal\" >\n            <Menu.Item key=\"search\">Search</Menu.Item>\n            <Menu.Item key=\"rated\">Rated</Menu.Item>\n          </Menu>\n        </div>\n        <MoviePageSelector guestSessionId={guestSessionId} switchKeys={switchKeys} />\n      </div>\n    );\n  }\n}\n\nMoviePage.propTypes = {\n  guestSessionId: PropTypes.string.isRequired,\n};\n","import ErrorAlert from './error-alert';\n\nexport default ErrorAlert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './error-alert.css';\nimport { Alert } from 'antd';\n\nexport default function ErrorAlert({ message }) {\n  const description = message === 'Failed to fetch' ? 'No internet connection' : 'Server error';\n\n  return (\n    <div className=\"error-alert-wrapper\">\n      <Alert\n        className=\"error-alert\"\n        message=\"Error:\"\n        description={description}\n        type=\"error\"\n        showIcon\n      />\n    </div>\n  );\n}\n\nErrorAlert.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport './app.css';\nimport 'antd/dist/antd.css';\nimport { Spin } from 'antd';\nimport MoviePage from '../movie-page';\nimport MoviesService from \"../../services/movies-service\";\nimport { GenreListProvider } from '../genre-list-context';\nimport ErrorAlert from '../error-alert';\n\nexport default class App extends React.Component {\n\n\n  state = {\n    loading: true,\n    guestSessionId: '',\n    error: false,\n    errorMessage: '',\n    genreList: null,\n  };\n\n  componentDidMount() {\n    Promise.all([\n      MoviesService.createGuestSession().then((id) => this.setState({ guestSessionId: id })),\n\n      MoviesService.getGenreList().then(({ genres }) => {\n        const genreList = genres.reduce((acc, { id, name }) => acc.set(id, name), new Map());\n\n        this.setState({ genreList });\n      }),\n    ])\n      .catch((error) =>\n        this.setState({\n          error: true,\n          errorMessage: error.message,\n        })\n      )\n      .finally(() => this.setState({ loading: false }));\n  }\n\n  render() {\n    const { loading, guestSessionId, error, errorMessage, genreList } = this.state;\n\n    if (error) return <ErrorAlert message={errorMessage} />;\n      console.log(this.state)\n    if (loading) {\n      return (\n        <div className=\"loading-wrapper\">\n          <Spin tip=\"loading...\" />\n        </div>\n      );\n    }\n\n    return  (\n      <div className=\"main-wrapper\">\n        <GenreListProvider value={genreList} >\n            <MoviePage  guestSessionId={guestSessionId}/>\n        </GenreListProvider>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}